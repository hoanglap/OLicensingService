version: '3.7'

services:
    licensingservice:
      image: ostock/licensing-service:latest
      ports:
        - "8180:8080"
      environment:
        - "SPRING_PROFILES_ACTIVE=dev"
        - "SPRING_CLOUD_CONFIG_URI=http://localhost:8071"
      networks:
        backend:
          aliases:
            - "licenseservice"

    keycloak:
      image: jboss/keycloak
      restart: always
      environment:
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin
        DB_VENDOR: h2

      ports:
        - "8080:8080"
      networks:
        backend:
          aliases:
            - "keycloak"

    zookeeper:
      image: wurstmeister/zookeeper:latest
      ports:
        - 2181:2181
      networks:
        backend:
          aliases:
            - "zookeeper"

    kafkaserver:
      image: wurstmeister/kafka:latest
      ports:
        - 9092:9092
      environment:
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9094
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CREATE_TOPICS: dresses:1:1,ratings:1:1

      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"
      depends_on:
        - zookeeper
      networks:
        backend:
          aliases:
            - "kafka"
    redisserver:
      image: redis:alpine
      ports:
        - 6379:6379
      networks:
        backend:
          aliases:
            - "redis"

    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
      container_name: elasticsearch
      environment:
        - node.name=elasticsearch
        - discovery.type=single-node
        - cluster.name=docker-cluster
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
        - ./esdata:/usr/share/elasticsearch/data
      ports:
        - 9300:9300
        - 9200:9200
      networks:
        backend:
          aliases:
            - "elasticsearch"

    kibana:
      image: docker.elastic.co/kibana/kibana:7.7.0
      container_name: kibana
      environment:
        ELASTICSEARCH_URL: "http://elasticsearch:9300"
      ports:
        - 5601:5601
      networks:
        backend:
          aliases:
            - "kibana"
    logstash:
      image: docker.elastic.co/logstash/logstash:7.7.0
      container_name: logstash
      command: logstash -f /etc/logstash/conf.d/logstash.conf:ro
      volumes:
        - ./config:/etc/logstash/conf.d
      ports:
        - "5000:5000"
      networks:
        backend:
          aliases:
            - "logstash"
      depends_on:
        - "elasticsearch"



networks:
  backend:
    driver: bridge

